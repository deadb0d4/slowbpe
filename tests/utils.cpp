#include <gtest/gtest.h>

#include <vector>
#include <utils.h>

using namespace std;

namespace {
using namespace std;
}  // namespace

TEST(Utils, Strings) {
  // python3 -c 'print(list("I dont know korean ðŸ¦§ Sorry ðŸŒš".encode("utf-8")))'
  vector<int> expected = {73,  32,  100, 111, 110, 116, 32,  107, 110,
                          111, 119, 32,  107, 111, 114, 101, 97,  110,
                          32,  240, 159, 166, 167, 32,  83,  111, 114,
                          114, 121, 32,  240, 159, 140, 154};
  string s = "I dont know korean ðŸ¦§ Sorry ðŸŒš";

  EXPECT_EQ(CastStringToInts(s), expected);
}

TEST(Utils, Files) {
  {
    auto static_file_1 = std::filesystem::path(__FILE__).parent_path() /
                         "static/test_string_1.txt";
    string expected = "hello\n\nworld\n\n\nblank lines exist \n\n";
    EXPECT_EQ(ReadText(static_file_1), expected);
  }
  auto static_file_0 = std::filesystem::path(__FILE__).parent_path() /
                       "static/test_string_0.txt";
  // python3 -c "from pathlib import Path;
  // print(list(Path('tests/static/test_string_0.txt').read_text().encode('utf-8')))"
  vector<int> expected = {
      239, 188, 181, 239, 189, 142, 239, 189, 137, 239, 189, 131, 239, 189, 143,
      239, 189, 132, 239, 189, 133, 33,  32,  240, 159, 133, 164, 240, 159, 133,
      157, 240, 159, 133, 152, 240, 159, 133, 146, 240, 159, 133, 158, 240, 159,
      133, 147, 240, 159, 133, 148, 226, 128, 189, 32,  240, 159, 135, 186, 226,
      128, 140, 240, 159, 135, 179, 226, 128, 140, 240, 159, 135, 174, 226, 128,
      140, 240, 159, 135, 168, 226, 128, 140, 240, 159, 135, 180, 226, 128, 140,
      240, 159, 135, 169, 226, 128, 140, 240, 159, 135, 170, 33,  32,  240, 159,
      152, 132, 10,  10,  85,  112, 100, 97,  116, 101, 58,  32,  105, 110, 32,
      87,  105, 110, 49,  48,  32,  118, 101, 114, 115, 105, 111, 110, 32,  49,
      57,  48,  51,  44,  32,  116, 104, 101, 121, 32,  102, 105, 110, 97,  108,
      108, 121, 32,  97,  100, 100, 101, 100, 32,  85,  84,  70,  45,  56,  32,
      115, 117, 112, 112, 111, 114, 116, 32,  116, 111, 32,  116, 104, 101, 32,
      56,  45,  98,  105, 116, 32,  65,  80,  73,  115, 33,  32,  240, 159, 152,
      138, 10,  10,  10,  70,  111, 114, 32,  101, 120, 97,  109, 112, 108, 101,
      44,  32,  116, 104, 101, 32,  97,  99,  99,  101, 110, 116, 101, 100, 32,
      99,  104, 97,  114, 97,  99,  116, 101, 114, 32,  226, 128, 156, 195, 129,
      226, 128, 157, 32,  99,  97,  110, 32,  98,  101, 32,  101, 120, 112, 114,
      101, 115, 115, 101, 100, 32,  97,  115, 32,  97,  32,  115, 116, 114, 105,
      110, 103, 32,  111, 102, 32,  116, 119, 111, 32,  99,  111, 100, 101, 32,
      112, 111, 105, 110, 116, 115, 58,  10};
  EXPECT_EQ(CastStringToInts(ReadText(static_file_0)), expected);
}
